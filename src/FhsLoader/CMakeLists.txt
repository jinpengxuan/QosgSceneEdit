INCLUDE(${OSG_USE_FILE})

ADD_CUSTOM_TARGET(FhsParser echo "Creating FhsLoader parser & scanner ...")

IF(WIN32)
    SET(FLEX_CMD ${SceneEdit_SOURCE_DIR}/3rdparty/win32/bin/flex.exe)
    SET(BISON_CMD ${SceneEdit_SOURCE_DIR}/3rdparty/win32/bin/bison.exe)
    INCLUDE_DIRECTORIES(${SceneEdit_SOURCE_DIR}/3rdparty/win32/include)
ELSE(WIN32)
    SET(FLEX_CMD flex)
    SET(BISON_CMD bison)
ENDIF(WIN32)

ADD_CUSTOM_COMMAND(
    SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/FhsLexer.l
    COMMAND ${FLEX_CMD}
    ARGS -+ -o${CMAKE_CURRENT_BINARY_DIR}/FhsLexer.cpp ${CMAKE_CURRENT_SOURCE_DIR}/FhsLexer.l
    TARGET FhsParser
    DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/FhsParser.h
    OUTPUTS ${CMAKE_CURRENT_BINARY_DIR}/FhsLexer.cpp)
    
ADD_CUSTOM_COMMAND(
    SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/FhsParser.y
    COMMAND ${BISON_CMD}
    ARGS -l -p FhsParser_ --defines=${CMAKE_CURRENT_BINARY_DIR}/FhsParser.h -o${CMAKE_CURRENT_BINARY_DIR}/FhsParser.cpp ${CMAKE_CURRENT_SOURCE_DIR}/FhsParser.y
    TARGET FhsParser
    OUTPUTS ${CMAKE_CURRENT_BINARY_DIR}/FhsParser.cpp ${CMAKE_CURRENT_BINARY_DIR}/FhsParser.h
)    

SET(mySources 
    FhsLoader.cpp 
    ${CMAKE_CURRENT_BINARY_DIR}/FhsParser.h 
    ${CMAKE_CURRENT_BINARY_DIR}/FhsParser.cpp 
    ${CMAKE_CURRENT_BINARY_DIR}/FhsLexer.cpp
)

SET_SOURCE_FILES_PROPERTIES(${CMAKE_CURRENT_BINARY_DIR}/FhsParser.h GENERATED)
SET_SOURCE_FILES_PROPERTIES(${CMAKE_CURRENT_BINARY_DIR}/FhsParser.h PROPERTIES HEADER_FILE_ONLY TRUE)
SET_SOURCE_FILES_PROPERTIES(${CMAKE_CURRENT_BINARY_DIR}/FhsParser.cpp GENERATED)
SET_SOURCE_FILES_PROPERTIES(${CMAKE_CURRENT_BINARY_DIR}/FhsLexer.cpp GENERATED)

INCLUDE_DIRECTORIES( . ${CMAKE_CURRENT_BINARY_DIR})

IF(BUILD_FHS_OSG_PLUGIN)
    SET(mySources ${mySources} ReaderWriterFHS.cpp)
    ADD_LIBRARY(osgdb_fhs SHARED ${mySources})
    TARGET_LINK_LIBRARIES(osgdb_fhs ${OSG_LIBRARIES})
    INSTALL_TARGETS(/bin osgdb_fhs)
ELSE(BUILD_FHS_OSG_PLUGIN)
    ADD_LIBRARY(FhsLoader STATIC ${mySources})
ENDIF(BUILD_FHS_OSG_PLUGIN)
